name: Auto Release Patched Claude Package

on:
  workflow_run:
    workflows: ["Test Patches"]
    types: [completed]

jobs:
  auto-release:
    runs-on: ubuntu-latest
    if: >
      github.event.workflow_run.conclusion == 'success' &&
      github.event.workflow_run.event == 'pull_request' &&
      (
        github.event.workflow_run.actor.login == 'dependabot[bot]' ||
        (
          github.event.workflow_run.actor.login == 'github-actions[bot]' &&
          contains(github.event.workflow_run.head_commit.message, 'Auto-fixed by Claude Code Action')
        )
      )
    
    permissions:
      id-token: write
      contents: write
      pull-requests: read
      actions: read
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Download test artifacts
      uses: actions/download-artifact@v4
      with:
        name: patch-test-results
        github-token: ${{ secrets.GITHUB_TOKEN }}
        run-id: ${{ github.event.workflow_run.id }}
    
    - name: Verify patches passed
      run: |
        if ! grep -q "✓ All patches\|✓ Sub-agent recursion:" build.log; then
          echo "❌ Patches did not pass - aborting release"
          exit 1
        fi
        echo "✅ Patches verified working"
    
    - name: Extract Claude version from PR
      id: version
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        PR_NUMBER=$(gh run view ${{ github.event.workflow_run.id }} --json pullRequests --jq '.pullRequests[0].number')
        
        # Verify this is a Dependabot PR (important for auto-fixed PRs)
        PR_AUTHOR=$(gh pr view $PR_NUMBER --json author --jq '.author.login')
        if [ "$PR_AUTHOR" != "dependabot[bot]" ]; then
          echo "❌ Not a Dependabot PR, skipping auto-release"
          echo "PR author: $PR_AUTHOR"
          exit 1
        fi
        
        # Extract Claude version from PR title or body
        PR_TITLE=$(gh pr view $PR_NUMBER --json title --jq '.title')
        PR_BODY=$(gh pr view $PR_NUMBER --json body --jq '.body')
        CLAUDE_VERSION=$(echo "$PR_TITLE" | grep -oP '@anthropic-ai/claude-code@\K[0-9]+\.[0-9]+\.[0-9]+' || \
                        echo "$PR_BODY" | grep -oP '@anthropic-ai/claude-code@\K[0-9]+\.[0-9]+\.[0-9]+')
        
        echo "claude_version=$CLAUDE_VERSION" >> $GITHUB_OUTPUT
        echo "pr_number=$PR_NUMBER" >> $GITHUB_OUTPUT
        echo "✅ Verified Dependabot PR for Claude Code v$CLAUDE_VERSION"
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    
    - name: Build npm package
      run: |
        ./scripts/build-package.sh ${{ steps.version.outputs.claude_version }} ./dist
        echo "✅ Package built: ./dist/free-claude-code-${{ steps.version.outputs.claude_version }}.tgz"
    
    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.version.outputs.claude_version }}
        release_name: Free Claude Code v${{ steps.version.outputs.claude_version }}
        body: |
          🎉 **Patched Claude Code v${{ steps.version.outputs.claude_version }}**
          
          Complete npm package with sub-agent recursion enabled.
          
          **Install:**
          ```bash
          npm install -g https://github.com/${{ github.repository }}/releases/download/v${{ steps.version.outputs.claude_version }}/free-claude-code-${{ steps.version.outputs.claude_version }}.tgz
          ```
          
          **Rollback:**
          ```bash
          npm uninstall -g free-claude-code
          npm install -g @anthropic-ai/claude-code@${{ steps.version.outputs.claude_version }}
          ```
        draft: false
        prerelease: false
    
    - name: Upload package
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/free-claude-code-${{ steps.version.outputs.claude_version }}.tgz
        asset_name: free-claude-code-${{ steps.version.outputs.claude_version }}.tgz
        asset_content_type: application/gzip
    
    - name: Close Dependabot PR or comment on merged PR
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        # Check if PR is already merged (for auto-fixed PRs)
        PR_STATE=$(gh pr view ${{ steps.version.outputs.pr_number }} --json state --jq '.state')
        PR_MERGED=$(gh pr view ${{ steps.version.outputs.pr_number }} --json merged --jq '.merged')
        
        if [ "$PR_MERGED" = "true" ]; then
          echo "✅ PR already merged (likely auto-fixed), just commenting"
        elif [ "$PR_STATE" = "OPEN" ]; then
          echo "🔄 Closing open Dependabot PR"
          gh pr close ${{ steps.version.outputs.pr_number }}
        fi
        
        # Always comment with release info
        gh pr comment ${{ steps.version.outputs.pr_number }} --body "🎉 **Auto-released v${{ steps.version.outputs.claude_version }}**

        [📦 Download](https://github.com/${{ github.repository }}/releases/tag/v${{ steps.version.outputs.claude_version }})"